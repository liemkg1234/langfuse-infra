services:
  langfuse-worker:
    image: docker.io/langfuse/langfuse-worker:3
    restart: always
    env_file:
      - .env
    depends_on: &langfuse-depends-on
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    expose:
      - 3030
    networks:
      - langfuse-net

  langfuse-web:
    image: docker.io/langfuse/langfuse:3
    restart: always
    env_file:
      - .env
    depends_on: *langfuse-depends-on
    ports:
      - ${UI_PORT}:3000
    networks:
      - langfuse-net

  clickhouse:
    image: docker.io/clickhouse/clickhouse-server
    restart: always
    environment:
      CLICKHOUSE_DB: ${CLICKHOUSE_DB}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    volumes:
      - ./volumes/clickhouse/data:/var/lib/clickhouse
      - ./volumes/clickhouse/logs:/var/log/clickhouse-server
    expose:
      - 8123
      - 9000
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 1s
    networks:
      - langfuse-net

  minio:
    image: docker.io/minio/minio
    restart: always
    entrypoint: sh
    command: -c 'mkdir -p /data/langfuse && minio server --address ":9000" --console-address ":9001" /data'
    expose:
      - 9000
      - 9001
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ./volumes/minio:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 1s
    networks:
      - langfuse-net

  redis:
    image: docker.io/redis:7
    restart: always
    command: --requirepass ${REDIS_AUTH}
    expose:
      - 6379
    volumes:
      - ./volumes/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 10s
      retries: 10
    networks:
      - langfuse-net

  postgres:
    image: docker.io/postgres:${POSTGRES_VERSION}
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - 5432
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 3s
      timeout: 3s
      retries: 10
    networks:
      - langfuse-net

networks:
  langfuse-net:
    name: ${DOCKER_NETWORK_NAME}
    driver: bridge
